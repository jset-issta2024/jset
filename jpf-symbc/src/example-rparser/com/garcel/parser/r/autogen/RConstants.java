//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package com.garcel.parser.r.autogen;

public interface RConstants {
    int EOF = 0;
    int COMMENT = 1;
    int EOL = 2;
    int SPACE = 3;
    int SEMICOLON = 4;
    int LEFT_BRACKET = 5;
    int RIGHT_BRACKET = 6;
    int LEFT_BRACE = 7;
    int RIGHT_BRACE = 8;
    int LEFT_SQUARE = 9;
    int LEFT_SQUARE_DOUBLE = 10;
    int RIGHT_SQUARE = 11;
    int AND = 12;
    int AND2 = 13;
    int DIVISION = 14;
    int EQ = 15;
    int EQ_ASSIGN = 16;
    int EXPONENTIATION = 17;
    int GE = 18;
    int GT = 19;
    int HELP = 20;
    int INT_DIVISION = 21;
    int KRONECKER_PRODUCT = 22;
    int MATCHING_OPERATOR = 23;
    int MATRIX_PRODUCT = 24;
    int MINUS = 25;
    int MOD = 26;
    int MULTIPLICATION = 27;
    int NE = 28;
    int NOT = 29;
    int LE = 30;
    int LEFT_ASSIGN = 31;
    int LIST_SUBSET = 32;
    int LT = 33;
    int OR = 34;
    int OR2 = 35;
    int OUTER_PRODUCT = 36;
    int PLUS = 37;
    int RIGHT_ASSIGN = 38;
    int SEQUENCE = 39;
    int SPECIAL_OPERATOR = 40;
    int TILDE = 41;
    int AT = 42;
    int BREAK = 43;
    int COMMA = 44;
    int DOT = 45;
    int FUNCTION = 46;
    int ELSE = 47;
    int FOR = 48;
    int IF = 49;
    int IN = 50;
    int NEXT = 51;
    int NS_GET = 52;
    int NS_GET_INT = 53;
    int REPEAT = 54;
    int UNDERSCORE = 55;
    int WHILE = 56;
    int NUM_CONST = 57;
    int INTEGER_LITERAL = 58;
    int DIGIT = 59;
    int NON_ZERO_DIGIT = 60;
    int FLOAT_LITERAL = 61;
    int EXP = 62;
    int COMPLEX_LITERAL = 63;
    int HEX_LITERAL = 64;
    int HEX_DIGIT = 65;
    int INF = 66;
    int NA = 67;
    int NAN = 68;
    int NULL_CONST = 69;
    int LOGICAL_CONSTANT = 70;
    int STR_CONST = 71;
    int SINGLE_QUOTE_STR = 72;
    int DOUBLE_QUOTE_STR = 73;
    int SYMBOL = 74;
    int SYMBOL_BACKTICK = 75;
    int SYMBOL_LETTER = 76;
    int SYMBOL_DOT = 77;
    int SYMBOL_TAIL = 78;
    int LETTER = 79;
    int DEFAULT = 0;
    String[] tokenImage = new String[]{"<EOF>", "<COMMENT>", "<EOL>", "<SPACE>", "\";\"", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"[[\"", "\"]\"", "\"&\"", "\"&&\"", "\"/\"", "\"==\"", "<EQ_ASSIGN>", "\"^\"", "\">=\"", "\">\"", "\"?\"", "\"%/%\"", "\"%x%\"", "<MATCHING_OPERATOR>", "\"%*%\"", "\"-\"", "\"%%\"", "\"*\"", "\"!=\"", "\"!\"", "\"<=\"", "<LEFT_ASSIGN>", "\"$\"", "\"<\"", "\"|\"", "\"||\"", "\"%o%\"", "\"+\"", "<RIGHT_ASSIGN>", "\":\"", "<SPECIAL_OPERATOR>", "\"~\"", "\"@\"", "\"break\"", "\",\"", "\".\"", "\"function\"", "\"else\"", "\"for\"", "\"if\"", "\"in\"", "\"next\"", "\"::\"", "\":::\"", "\"repeat\"", "\"_\"", "\"while\"", "<NUM_CONST>", "<INTEGER_LITERAL>", "<DIGIT>", "<NON_ZERO_DIGIT>", "<FLOAT_LITERAL>", "<EXP>", "<COMPLEX_LITERAL>", "<HEX_LITERAL>", "<HEX_DIGIT>", "\"Inf\"", "\"NA\"", "\"NaN\"", "\"NULL\"", "<LOGICAL_CONSTANT>", "<STR_CONST>", "<SINGLE_QUOTE_STR>", "<DOUBLE_QUOTE_STR>", "<SYMBOL>", "<SYMBOL_BACKTICK>", "<SYMBOL_LETTER>", "<SYMBOL_DOT>", "<SYMBOL_TAIL>", "<LETTER>"};
}
