package com.antlr.javaexpression;// $ANTLR 2.7.7 (20060906): "java_expression.g" -> "JavaExpressionLexer.java"$

public interface JavaExpressionLexerTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int STATEMENT = 4;
	int BINARY_EXPRESSION = 5;
	int INSTANCEOF_BINARY_EXPRESSION = 6;
	int UNARY_EXPRESSION = 7;
	int PARENTHESES_EXPRESSION = 8;
	int TYPE_CAST = 9;
	int TYPE_NAME = 10;
	int PRIMARY_SELECTOR = 11;
	int DOT_SELECTOR = 12;
	int METHOD_CALL = 13;
	int EXPRESSION_LIST = 14;
	int JNULL = 15;
	int TRUE = 16;
	int FALSE = 17;
	int INSTANCEOF = 18;
	int DOT = 19;
	int HEX_NUMERIC_LITERAL = 20;
	int OCT_NUMERIC_LITERAL = 21;
	int FP_NUMERIC_LITERAL = 22;
	int DEC_NUMERIC_LITERAL = 23;
	int HexDigit = 24;
	int DecDigit = 25;
	int OctDigit = 26;
	int NumericLiteral = 27;
	int CharacterLiteral = 28;
	int SingleCharacter = 29;
	int StringLiteral = 30;
	int StringCharacters = 31;
	int StringCharacter = 32;
	int EscapeSequence = 33;
	int OctalEscape = 34;
	int UnicodeEscape = 35;
	int ZeroToThree = 36;
	int Identifier = 37;
	int LPAREN = 38;
	int RPAREN = 39;
	int LBRACE = 40;
	int RBRACE = 41;
	int LBRACK = 42;
	int RBRACK = 43;
	int SEMI = 44;
	int COMMA = 45;
	int ASSIGN = 46;
	int CMP_GT = 47;
	int CMP_LT = 48;
	int BANG = 49;
	int TILDE = 50;
	int QUESTION = 51;
	int COLON = 52;
	int EQUAL = 53;
	int CMP_LE = 54;
	int CMP_GE = 55;
	int NOTEQUAL = 56;
	int AND = 57;
	int OR = 58;
	int ADD = 59;
	int SUB = 60;
	int MUL = 61;
	int DIV = 62;
	int BITAND = 63;
	int BITOR = 64;
	int CARET = 65;
	int MOD = 66;
	int SHIFT_LEFT = 67;
	int SHIFT_RIGHT_S = 68;
	int SHIFT_RIGHT_U = 69;
	int WS = 70;
	int COMMENT = 71;
	int LINE_COMMENT = 72;
}
