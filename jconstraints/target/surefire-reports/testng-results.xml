<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="15" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="52" started-at="2022-03-21T00:40:47Z" finished-at="2022-03-21T00:40:47Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="52" started-at="2022-03-21T00:40:47Z" finished-at="2022-03-21T00:40:47Z">
      <class name="gov.nasa.jpf.constraints.expressions.functions.math.FunctionAxiomsTest">
        <test-method status="PASS" signature="printAxiomsSin()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.FunctionAxiomsTest@2d6e8792]" name="printAxiomsSin" duration-ms="5" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printAxiomsSin -->
        <test-method status="PASS" signature="testAtan2()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.FunctionAxiomsTest@2d6e8792]" name="testAtan2" duration-ms="3" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtan2 -->
        <test-method status="PASS" signature="testLogExp()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.FunctionAxiomsTest@2d6e8792]" name="testLogExp" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogExp -->
        <test-method status="PASS" signature="testSqrt()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.FunctionAxiomsTest@2d6e8792]" name="testSqrt" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrt -->
      </class> <!-- gov.nasa.jpf.constraints.expressions.functions.math.FunctionAxiomsTest -->
      <class name="gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest">
        <test-method status="PASS" signature="testAcos()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest@3d24753a]" name="testAcos" duration-ms="2" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAcos -->
        <test-method status="PASS" signature="testCos()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest@3d24753a]" name="testCos" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCos -->
        <test-method status="PASS" signature="testAtan()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest@3d24753a]" name="testAtan" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAtan -->
        <test-method status="PASS" signature="testTan()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest@3d24753a]" name="testTan" duration-ms="1" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTan -->
        <test-method status="PASS" signature="testAsin()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest@3d24753a]" name="testAsin" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAsin -->
        <test-method status="PASS" signature="testSin()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest@3d24753a]" name="testSin" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
      </class> <!-- gov.nasa.jpf.constraints.expressions.functions.math.MathFunctionsTest -->
      <class name="gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest">
        <test-method status="PASS" signature="tearDownMethod()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest@43a25848]" name="tearDownMethod" is-config="true" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownMethod -->
        <test-method status="PASS" signature="testIntegerFunction()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest@43a25848]" name="testIntegerFunction" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIntegerFunction -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest@43a25848]" name="setUpClass" is-config="true" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="setUpMethod()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest@43a25848]" name="setUpMethod" is-config="true" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpMethod -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest@43a25848]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- gov.nasa.jpf.constraints.expressions.functions.math.IntegerFunctionTest -->
      <class name="gov.nasa.jpf.constraints.expressions.IfThenElseTest">
        <test-method status="PASS" signature="testIfThenElse()[pri:0, instance:gov.nasa.jpf.constraints.expressions.IfThenElseTest@30c7da1e]" name="testIfThenElse" duration-ms="3" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIfThenElse -->
      </class> <!-- gov.nasa.jpf.constraints.expressions.IfThenElseTest -->
      <class name="gov.nasa.jpf.constraints.parser.ParserTest">
        <test-method status="PASS" signature="testParser()[pri:0, instance:gov.nasa.jpf.constraints.parser.ParserTest@511baa65]" name="testParser" duration-ms="21" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testParser -->
      </class> <!-- gov.nasa.jpf.constraints.parser.ParserTest -->
      <class name="gov.nasa.jpf.constraints.expressions.PrintTest">
        <test-method status="PASS" signature="setupExpression()[pri:0, instance:gov.nasa.jpf.constraints.expressions.PrintTest@340f438e]" name="setupExpression" is-config="true" duration-ms="5" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExpression -->
        <test-method status="PASS" signature="testMalformedPrint()[pri:0, instance:gov.nasa.jpf.constraints.expressions.PrintTest@340f438e]" name="testMalformedPrint" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMalformedPrint -->
        <test-method status="PASS" signature="testPrint()[pri:0, instance:gov.nasa.jpf.constraints.expressions.PrintTest@340f438e]" name="testPrint" duration-ms="0" started-at="2022-03-21T08:40:47Z" finished-at="2022-03-21T08:40:47Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at gov.nasa.jpf.constraints.expressions.NumericBooleanExpression.print(NumericBooleanExpression.java:132)
	at gov.nasa.jpf.constraints.expressions.PropositionalCompound.print(PropositionalCompound.java:97)
	at gov.nasa.jpf.constraints.api.Expression.print(Expression.java:122)
	at gov.nasa.jpf.constraints.expressions.PrintTest.testPrint(PrintTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPrint -->
      </class> <!-- gov.nasa.jpf.constraints.expressions.PrintTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
