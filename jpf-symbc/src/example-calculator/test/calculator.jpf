# @include = ../../concolic.jpf

# specify the decision procedure to use
# symbolic.dp=z3bitvector
# symbolic.bvlength=64

# print some debug information
# symbolic.debug=true

# listener to print information (PCs, test cases) about symbolic run
# listener = gov.nasa.jpf.symbc.SymbolicListener
# listener = gov.nasa.jpf.symbc.SymbolicListener,gov.nasa.jpf.listener.BudgetChecker
# budget.max_time=900000

# coverage.include=com.braxisltd.calculator.*
# listener = gov.nasa.jpf.symbc.concolic.ConcreteExecutionListener,gov.nasa.jpf.listener.CoverageAnalyzer


# handling symbolic arrays
# symbolic.lazy=on
# symbolic.arrays=true

# symbolic.collect_constraints=true
# symbolic.concolic=true

# classpath = ${jpf-symbc}/build/example-calculator
# sourcepath = ${jpf-symbc}/src/example-calculator

# target = test.TestCalculator


# @include = ../../concolic.jpf

classpath = ${jpf-symbc}/build/example-calculator
sourcepath = ${jpf-symbc}/src/example-calculator

target = test.TestCalculator

symbolic.dp=z3bitvector
symbolic.bvlength=64
symbolic.lazy=on
symbolic.arrays=true
symbolic.collect_constraints=true
symbolic.concolic=true

budget.max_time=900000
coverage.include=de.undercouch.actson.*
listener = gov.nasa.jpf.symbc.SymbolicListener,gov.nasa.jpf.listener.BudgetChecker,gov.nasa.jpf.symbc.concolic.ConcreteExecutionListener,gov.nasa.jpf.listener.CoverageAnalyzer
